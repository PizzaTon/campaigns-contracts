cell pack_jetton_wallet_data(int balance, slice owner_address, slice jetton_master_address, cell jetton_wallet_code) inline {
   return  begin_cell()
            .store_coins(balance)
            .store_slice(owner_address)
            .store_slice(jetton_master_address)
            .store_ref(jetton_wallet_code)
           .end_cell();
}

cell calculate_jetton_wallet_state_init(slice owner_address, slice jetton_master_address, cell jetton_wallet_code) inline {
  return begin_cell()
          .store_uint(0, 2)
          .store_dict(jetton_wallet_code)
          .store_dict(pack_jetton_wallet_data(0, owner_address, jetton_master_address, jetton_wallet_code))
          .store_uint(0, 1)
         .end_cell();
}

slice calculate_jetton_wallet_address(cell state_init) inline {
  return begin_cell().store_uint(4, 3)
                     .store_int(workchain(), 8)
                     .store_uint(cell_hash(state_init), 256)
                     .end_cell()
                     .begin_parse();
}

slice calculate_user_jetton_wallet_address(slice owner_address, slice jetton_master_address, cell jetton_wallet_code) inline {
  return calculate_jetton_wallet_address(calculate_jetton_wallet_state_init(owner_address, jetton_master_address, jetton_wallet_code));
}

() transfer_jetton(slice jetton_master_address, cell jetton_wallet_code, int query_id, slice to, int jetton_amount, int total_ton, int forward_ton) impure inline {
    cell state_init = calculate_jetton_wallet_state_init(my_address(), jetton_master_address, jetton_wallet_code);
    slice jetton_wallet_address = calculate_jetton_wallet_address(state_init);

    cell msg = begin_cell()
    .store_uint(op::jetton_transfer(), 32)
    .store_uint(query_id, 64)
    .store_coins(jetton_amount) ;; jetton amount
    .store_slice(to) ;; destination
    .store_slice(my_address()) ;; response_address (maybe replace with from_address)
    .store_uint(0, 1)
    .store_coins(forward_ton)
    .store_uint(0, 1)
    .end_cell();
    var msg_body = begin_cell()
    .store_uint(0x18, 6)
    .store_slice(jetton_wallet_address)
    .store_coins(total_ton)
    .store_uint(4 + 2 + 1, 1 + 4 + 4 + 64 + 32 + 1 + 1 + 1)
    .store_ref(state_init)
    .store_ref(msg);
    send_raw_message(msg_body.end_cell(), 1);
}